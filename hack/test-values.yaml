# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  replicaCount: 1
  environment: {}
   # list of key: value
   # GLOBAL1: value

hostNetwork: false
## Set default image, imageTag, and imagePullPolicy.
## ref: https://hub.docker.com/r/apache/nifi/
##
image:
  repository: "myrepo.com/my-image"
  tag: "v1.2.3"
  pullPolicy: IfNotPresent

  #replicaCount: 1

# command: ["/bin/sh","-c"]
# args: ["echo 'consuming a message'; sleep 5"]

nameOverride: ""
fullnameOverride: ""

## Optionally specify an imagePullSecret.
## Secret must be manually created in the namespace.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##

#imagePullSecrets: myRegistrKeySecretName
imageCredentials: {}
  # registry: https://index.docker.io/v1/
  # username: username
  # password: password
  # email: tsorage@cetic.be

#serviceAccount: microservice-sa
createServiceAccount: false
rbac: false

# Annotation for the Deployment
annotations: {}

# List of services
services:
  - name: web
    type: ClusterIP
    annotations: {}
    specs:
    - port: 8000
      targetPort: 8000
      name: http
#targetPort: is the port the container accepts traffic on, 
#port: is the abstracted Service port, which can be any port other pods use to access the Service
#https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.16/#serviceport-v1-core

environment: {}
#   VAR1: value1

#Probes
liveness:
  enabled: false
  path: /alive
  port: 8001
  initialDelaySeconds: 3
  periodSeconds: 3
readiness:
  enabled: false
  path: /ready
  port: 8001
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 3


updateStrategy: {}
  ## for stateless apps, Default
  # type: RollingUpdate
  # rollingUpdate: {}

  ## for stateful apps: 
  # type: Recreate

volumes:
  enabled: true
  pvc:
    enabled: true
    existing_claim: ""
    name: my-data
    mountPath: ""
    # if subPath is used mountPath must be empty 
    subPaths:
    - mountPath: /data
      subPath: data
    - mountPath: /var/lib/logs
      subPath: logs
    size: 1G
    class:
    accessModes:
      - ReadWriteOnce

#  configFileCommonHeader: |
#    line1
#    line2

  configMaps: {}

#    - name: test-from-file
#      mountPath: /test2
#      files:
#        - source: config.conf
#          destination: application.conf
#    - name: test-mixed
#      mountPath: /test3
#      data:
#        test2.conf: |
#          another hello
#      files:
#        - source: config.conf
#          destination: application2.conf


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      servicePort: 8000
      serviceName: web
      path: /
  tls: []
  pathType: Prefix
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}

resources:
  limits:
    cpu: 100m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 200Mi

